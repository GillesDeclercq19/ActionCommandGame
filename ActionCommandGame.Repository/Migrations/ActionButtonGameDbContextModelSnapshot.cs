// <auto-generated />
using System;
using ActionCommandGame.Repository.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ActionCommandGame.Repository.Migrations
{
    [DbContext(typeof(ActionButtonGameDbContext))]
    partial class ActionButtonGameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ActionCommandGame.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActionCooldownSeconds")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Fuel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionCooldownSeconds = 0,
                            Attack = 50,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Basic Pickaxe",
                            Price = 50
                        },
                        new
                        {
                            Id = 2,
                            ActionCooldownSeconds = 0,
                            Attack = 300,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Enhanced Pick",
                            Price = 300
                        },
                        new
                        {
                            Id = 3,
                            ActionCooldownSeconds = 0,
                            Attack = 500,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Turbo Pick",
                            Price = 500
                        },
                        new
                        {
                            Id = 4,
                            ActionCooldownSeconds = 0,
                            Attack = 5000,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Mithril Warpick",
                            Price = 15000
                        },
                        new
                        {
                            Id = 5,
                            ActionCooldownSeconds = 0,
                            Attack = 50,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Thor's Hammer",
                            Price = 1000000
                        },
                        new
                        {
                            Id = 6,
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 20,
                            Fuel = 0,
                            Name = "Torn Clothes",
                            Price = 20
                        },
                        new
                        {
                            Id = 7,
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 150,
                            Fuel = 0,
                            Name = "Hardened Leather Gear",
                            Price = 200
                        },
                        new
                        {
                            Id = 8,
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 500,
                            Fuel = 0,
                            Name = "Iron plated Armor",
                            Price = 1000
                        },
                        new
                        {
                            Id = 9,
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 2000,
                            Fuel = 0,
                            Name = "Rock Shield",
                            Price = 10000
                        },
                        new
                        {
                            Id = 10,
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 2000,
                            Fuel = 0,
                            Name = "Emerald Shield",
                            Price = 10000
                        },
                        new
                        {
                            Id = 11,
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 20000,
                            Fuel = 0,
                            Name = "Diamond Shield",
                            Price = 10000
                        },
                        new
                        {
                            Id = 12,
                            ActionCooldownSeconds = 50,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 4,
                            Name = "Apple",
                            Price = 8
                        },
                        new
                        {
                            Id = 13,
                            ActionCooldownSeconds = 45,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 5,
                            Name = "Energy Bar",
                            Price = 10
                        },
                        new
                        {
                            Id = 14,
                            ActionCooldownSeconds = 30,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 30,
                            Name = "Field Rations",
                            Price = 300
                        },
                        new
                        {
                            Id = 15,
                            ActionCooldownSeconds = 25,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 100,
                            Name = "Abbye cheese",
                            Price = 500
                        },
                        new
                        {
                            Id = 16,
                            ActionCooldownSeconds = 25,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 100,
                            Name = "Abbye Beer",
                            Price = 500
                        },
                        new
                        {
                            Id = 17,
                            ActionCooldownSeconds = 15,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 500,
                            Name = "Celestial Burrito",
                            Price = 10000
                        },
                        new
                        {
                            Id = 18,
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 0,
                            Description = "Does nothing. Do you feel special now?",
                            Fuel = 0,
                            Name = "Balloon",
                            Price = 10
                        },
                        new
                        {
                            Id = 19,
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 0,
                            Description = "For those who cannot afford the Crown of Flexing.",
                            Fuel = 0,
                            Name = "Blue Medal",
                            Price = 100000
                        },
                        new
                        {
                            Id = 20,
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 0,
                            Description = "Yes, show everyone how much money you are willing to spend on something useless!",
                            Fuel = 0,
                            Name = "Crown of Flexing",
                            Price = 500000
                        },
                        new
                        {
                            Id = 21,
                            ActionCooldownSeconds = 1,
                            Attack = 1000000,
                            Defense = 1000000,
                            Description = "This is almost how a GOD must feel.",
                            Fuel = 1000000,
                            Name = "GOD MODE",
                            Price = 10000000
                        });
                });

            modelBuilder.Entity("ActionCommandGame.Model.NegativeGameEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DefenseLoss")
                        .HasColumnType("int");

                    b.Property<string>("DefenseWithGearDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("DefenseWithoutGearDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NegativeGameEvents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefenseLoss = 2,
                            DefenseWithGearDescription = "Your mining gear allows you and your tools to escape unscathed",
                            DefenseWithoutGearDescription = "You try to cover your face but the rocks are too heavy. That hurt!",
                            Description = "As you are mining, the cave walls rumble and rocks tumble down on you",
                            Name = "Rockfall",
                            Probability = 100
                        },
                        new
                        {
                            Id = 2,
                            DefenseLoss = 3,
                            DefenseWithGearDescription = "It tries to bite you, but your mining gear keeps the rat's teeth from sinking in.",
                            DefenseWithoutGearDescription = "It tries to bite you and nicks you in the ankles. It already starts to glow dangerously.",
                            Description = "As you are mining, you feel something scurry between your feet!",
                            Name = "Cave Rat",
                            Probability = 50
                        },
                        new
                        {
                            Id = 3,
                            DefenseLoss = 2,
                            DefenseWithGearDescription = "Your gear grants a safe landing, protecting you and your pickaxe.",
                            DefenseWithoutGearDescription = "You tumble down the dark hole and take a really bad landing. That hurt!",
                            Description = "As you are mining, the ground suddenly gives way and you fall down into a chasm!",
                            Name = "Sinkhole",
                            Probability = 100
                        },
                        new
                        {
                            Id = 4,
                            DefenseLoss = 3,
                            DefenseWithGearDescription = "Your gear barely covers you from the noxious goop. You are safe.",
                            DefenseWithoutGearDescription = "The slime covers your hands and arms and starts biting through your flesh. This hurts!",
                            Description = "As you are mining, you uncover a green slime oozing from the cracks!",
                            Name = "Ancient Bacteria",
                            Probability = 50
                        });
                });

            modelBuilder.Entity("ActionCommandGame.Model.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CurrentAttackPlayerItemId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentDefensePlayerItemId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentFuelPlayerItemId")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastActionExecutedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CurrentAttackPlayerItemId");

                    b.HasIndex("CurrentDefensePlayerItemId");

                    b.HasIndex("CurrentFuelPlayerItemId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Experience = 0,
                            Money = 100,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Experience = 2000,
                            Money = 100000,
                            Name = "John Francks"
                        },
                        new
                        {
                            Id = 3,
                            Experience = 5,
                            Money = 500,
                            Name = "Luc Doleman"
                        },
                        new
                        {
                            Id = 4,
                            Experience = 200,
                            Money = 12345,
                            Name = "Emilio Fratilleci"
                        });
                });

            modelBuilder.Entity("ActionCommandGame.Model.PlayerItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("RemainingAttack")
                        .HasColumnType("int");

                    b.Property<int>("RemainingDefense")
                        .HasColumnType("int");

                    b.Property<int>("RemainingFuel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerItems");
                });

            modelBuilder.Entity("ActionCommandGame.Model.PositiveGameEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int?>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PositiveGameEvents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Experience = 0,
                            Name = "Nothing but boring rocks",
                            Probability = 1000
                        },
                        new
                        {
                            Id = 2,
                            Description = "It slips out of your hands and rolls inside a crack in the floor. It is out of reach.",
                            Experience = 0,
                            Name = "The biggest Opal you ever saw.",
                            Probability = 500
                        },
                        new
                        {
                            Id = 3,
                            Experience = 0,
                            Name = "Sand, dirt and dust",
                            Probability = 1000
                        },
                        new
                        {
                            Id = 4,
                            Description = "You hold it to the light and warm it up to reveal secret texts, but it remains empty.",
                            Experience = 0,
                            Name = "A piece of empty paper",
                            Probability = 1000
                        },
                        new
                        {
                            Id = 5,
                            Description = "The water flows around your feet and creates a dirty puddle.",
                            Experience = 0,
                            Name = "A small water stream",
                            Probability = 1000
                        },
                        new
                        {
                            Id = 6,
                            Experience = 1,
                            Money = 1,
                            Name = "Junk",
                            Probability = 2000
                        },
                        new
                        {
                            Id = 7,
                            Experience = 1,
                            Money = 1,
                            Name = "Murphy's idea bin",
                            Probability = 300
                        },
                        new
                        {
                            Id = 8,
                            Experience = 1,
                            Money = 1,
                            Name = "Donald's book of excuses",
                            Probability = 300
                        },
                        new
                        {
                            Id = 9,
                            Experience = 1,
                            Money = 1,
                            Name = "Children's Treasure Map",
                            Probability = 300
                        });
                });

            modelBuilder.Entity("ActionCommandGame.Model.Player", b =>
                {
                    b.HasOne("ActionCommandGame.Model.PlayerItem", "CurrentAttackPlayerItem")
                        .WithMany("AttackPlayers")
                        .HasForeignKey("CurrentAttackPlayerItemId");

                    b.HasOne("ActionCommandGame.Model.PlayerItem", "CurrentDefensePlayerItem")
                        .WithMany("DefensePlayers")
                        .HasForeignKey("CurrentDefensePlayerItemId");

                    b.HasOne("ActionCommandGame.Model.PlayerItem", "CurrentFuelPlayerItem")
                        .WithMany("FuelPlayers")
                        .HasForeignKey("CurrentFuelPlayerItemId");

                    b.Navigation("CurrentAttackPlayerItem");

                    b.Navigation("CurrentDefensePlayerItem");

                    b.Navigation("CurrentFuelPlayerItem");
                });

            modelBuilder.Entity("ActionCommandGame.Model.PlayerItem", b =>
                {
                    b.HasOne("ActionCommandGame.Model.Item", "Item")
                        .WithMany("PlayerItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActionCommandGame.Model.Player", "Player")
                        .WithMany("Inventory")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ActionCommandGame.Model.Item", b =>
                {
                    b.Navigation("PlayerItems");
                });

            modelBuilder.Entity("ActionCommandGame.Model.Player", b =>
                {
                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("ActionCommandGame.Model.PlayerItem", b =>
                {
                    b.Navigation("AttackPlayers");

                    b.Navigation("DefensePlayers");

                    b.Navigation("FuelPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
